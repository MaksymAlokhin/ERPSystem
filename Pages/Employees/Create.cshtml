@page
@model ERPSystem.Pages.Employees.CreateModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h1>Create</h1>
<h4>Employee</h4>

<hr />
<form enctype="multipart/form-data" method="post" onload="populateOptionalSelectLists">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="row">
        <div class="col-sm-8">
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label asp-for="Employee.FirstName" class="control-label"></label>
                        <input asp-for="Employee.FirstName" class="form-control" />
                        <span asp-validation-for="Employee.FirstName" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <label asp-for="Employee.LastName" class="control-label"></label>
                        <input asp-for="Employee.LastName" class="form-control" />
                        <span asp-validation-for="Employee.LastName" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label asp-for="Employee.DateOfBirth" class="control-label"></label>
                        <input asp-for="Employee.DateOfBirth" class="form-control" />
                        <span asp-validation-for="Employee.DateOfBirth" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <label asp-for="Employee.EmployeeState" class="control-label"></label>
                        <select asp-for="Employee.EmployeeState" class="form-control" asp-items="Html.GetEnumSelectList<Models.EmployeeState>()"></select>
                        <span asp-validation-for="Employee.EmployeeState" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label asp-for="Employee.EmployeeRole" class="control-label"></label>
                        <select asp-for="Employee.EmployeeRole" class="form-control" asp-items="Html.GetEnumSelectList<Models.EmployeeRole>()"></select>
                        <span asp-validation-for="Employee.EmployeeRole" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-sm-6" id="selectList">
                    <div id="selectListAnchor"></div>
                    <div class="form-group" id="company">
                        <label asp-for="Employee.Company" class="control-label"></label>
                        <select asp-for="Employee.CompanyId" class="form-control" asp-items="ViewBag.CompanyId"><option value="">--none--</option></select>
                        <span asp-validation-for="Employee.CompanyId" class="text-danger"></span>
                    </div>
                    <div class="form-group" id="project">
                        <label asp-for="Employee.Project" class="control-label"></label>
                        <select asp-for="Employee.ProjectId" class="form-control" asp-items="ViewBag.ProjectId"><option value="">--none--</option></select>
                        <span asp-validation-for="Employee.ProjectId" class="text-danger"></span>
                    </div>
                    <div class="form-group" id="department">
                        <label asp-for="Employee.Department" class="control-label"></label>
                        <select asp-for="Employee.DepartmentId" class="form-control" asp-items="ViewBag.DepartmentId"><option value="">--none--</option></select>
                        <span asp-validation-for="Employee.DepartmentId" class="text-danger"></span>
                    </div>
                    <div class="form-group" id="branch">
                        <label asp-for="Employee.Branch" class="control-label"></label>
                        <select asp-for="Employee.BranchId" class="form-control" asp-items="ViewBag.BranchId"><option value="">--none--</option></select>
                        <span asp-validation-for="Employee.BranchId" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label asp-for="Employee.ProfilePicture" class="control-label"></label>
                        <div class="custom-file">
                            <input asp-for="FormFile" class="custom-file-input" id="customFile">
                            <label class="custom-file-label" for="customFile">Choose a File</label>
                        </div>
                        <span asp-validation-for="FormFile" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                    <div>
                        <a asp-page="./Index"
                           asp-route-pageIndex="@Model.PageIndex"
                           asp-route-sortOrder="@Model.CurrentSort"
                           asp-route-currentFilter="@Model.CurrentFilter"
                           asp-route-Role="@Model.Role">
                            Back to List
                        </a>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div id="photo">
                        @if (!string.IsNullOrEmpty(@Model.Employee.ProfilePicture))
                        {
                            <img id="upload" class="img-responsive" src="~/images/avatars/@Model.Employee.ProfilePicture" />
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="row">
                <div class="col-sm-4" id="assignments">
                    <div class="form-group">
                        <label asp-for="Employee.Assignments" class="control-label"></label><br />
                        <select asp-for="SelectedAssignments" asp-items="Model.AssignmentsSelectList" size="8">
                        </select>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4" id="mentors">
                    <div class="form-group">
                        <label asp-for="Employee.Mentors" class="control-label"></label><br />
                        <select asp-for="SelectedMentors" asp-items="Model.MentorsSelectList" size="8">
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        window.onload = function () {
            var role = document.getElementById("Employee_EmployeeRole");
            var roleSelection = role.options[role.selectedIndex].text;
            switch (roleSelection) {
                case 'General Manager':
                    hideElement('branch');
                    hideElement('project');
                    hideElement('department');
                    hideElement('assignments');
                    hideElement('mentors');
                    break;
                case 'Project Manager':
                    hideElement('branch');
                    hideElement('department');
                    hideElement('company');
                    hideElement('assignments');
                    break;
                case 'Department Head':
                    hideElement('branch');
                    hideElement('project');
                    hideElement('company');
                    hideElement('assignments');
                    break;
                case 'Mentor':
                    hideElement('department');
                    hideElement('project');
                    hideElement('company');
                    hideElement('mentors');
                    break;
                case 'Employee':
                    hideElement('department');
                    hideElement('project');
                    hideElement('company');
                    break;
            }
        }
        @* Change dropdowns according to role *@
        $(function () {
            $("#Employee_EmployeeRole").on("change", function () {
                var role = document.getElementById("Employee_EmployeeRole");
                var roleSelection = role.options[role.selectedIndex].text;
                switch (roleSelection) {
                    case 'General Manager':
                        selectElement('Employee_BranchId', '');
                        selectElement('Employee_ProjectId', '');
                        selectElement('Employee_DepartmentId', '');

                        hideElement('branch');
                        hideElement('project');
                        hideElement('department');

                        hideElement('assignments');
                        hideElement('mentors');

                        showElement('company');

                        break;

                    case 'Project Manager':
                        selectElement('Employee_BranchId', '');
                        selectElement('Employee_DepartmentId', '');
                        selectElement('Employee_CompanyId', '');

                        hideElement('branch');
                        hideElement('department');
                        hideElement('company');

                        hideElement('assignments');

                        showElement('project');
                        showElement('mentors');

                        break;

                    case 'Department Head':
                        selectElement('Employee_BranchId', '');
                        selectElement('Employee_ProjectId', '');
                        selectElement('Employee_CompanyId', '');

                        hideElement('branch');
                        hideElement('project');
                        hideElement('company');

                        hideElement('assignments');

                        showElement('department');
                        showElement('mentors');

                        break;

                    case 'Mentor':
                        selectElement('Employee_DepartmentId', '');
                        selectElement('Employee_ProjectId', '');
                        selectElement('Employee_CompanyId', '');

                        hideElement('department');
                        hideElement('project');
                        hideElement('company');

                        hideElement('mentors');

                        showElement('branch');
                        showElement('assignments');

                        break;

                    case 'Employee':
                        selectElement('Employee_DepartmentId', '');
                        selectElement('Employee_ProjectId', '');
                        selectElement('Employee_CompanyId', '');

                        hideElement('department');
                        hideElement('project');
                        hideElement('company');

                        showElement('branch');
                        showElement('assignments');
                        showElement('mentors');
                        break;
                }
            });
        });
        function selectElement(id, valueToSelect) {
            let element = document.getElementById(id);
            element.value = valueToSelect;
        }
        function hideElement(id) {
            var x = document.getElementById(id);
            x.style.display = "none";
        }
        function showElement(id) {
            var x = document.getElementById(id);
            x.style.display = "block";
        }

        $(function () {
            $("#Employee_BranchId").on("change", function () {
                if ($("#Employee_EmployeeRole option:selected").text() === 'Employee' || $("#Employee_EmployeeRole option:selected").text() === 'Mentor') {
                    var branchId = $(this).val();
                    $.getJSON(`?handler=Branch&branchId=${branchId}`, function (response) {
                        var state = document.getElementById('Employee_EmployeeState');
                        for (var i = 0; i < state.options.length; i++) {
                            if (state.options[i].text === response) {
                                state.selectedIndex = i;
                                break;
                            }
                        }
                    });
                }
            });
        });
        $(function () {
            $("#Employee_EmployeeState").on("change", function () {
                if ($("#Employee_EmployeeRole option:selected").text() === 'Employee' || $("#Employee_EmployeeRole option:selected").text() === 'Mentor') {
                    var branchId = $("#Employee_BranchId").val();
                    $.getJSON(`?handler=Branch&branchId=${branchId}`, function (response) {
                        if (response === "Inactive") {
                            var state = document.getElementById('Employee_EmployeeState');
                            for (var i = 0; i < state.options.length; i++) {
                                if (state.options[i].text === response) {
                                    state.selectedIndex = i;
                                    break;
                                }
                            }
                        }
                    });
                }
            });
        });
        $(function () {
            $("#Employee_EmployeeRole").on("change", function () {
                var state = document.getElementById('Employee_EmployeeState');
                if ($("#Employee_EmployeeRole option:selected").text() === 'General Manager' || $("#Employee_EmployeeRole option:selected").text() === 'Project Manager' || $("#Employee_EmployeeRole option:selected").text() === 'Department Head') {
                    for (var i = 0; i < state.options.length; i++) {
                        if (state.options[i].text === 'Active') {
                            state.selectedIndex = i;
                            break;
                        }
                    }
                }
                else {
                    for (var i = 0; i < state.options.length; i++) {
                        var branchId = $("#Employee_BranchId").val();
                        $.getJSON(`?handler=Branch&branchId=${branchId}`, function (response) {
                            if (response === "Inactive") {
                                var state = document.getElementById('Employee_EmployeeState');
                                for (var i = 0; i < state.options.length; i++) {
                                    if (state.options[i].text === response) {
                                        state.selectedIndex = i;
                                        break;
                                    }
                                }
                            }
                        });
                    }
                }
            });
        });

        $(function () {
            $("#Employee_DepartmentId").on("change", function () {
                var departmentId = $(this).val();
                $("#SelectedMentors").empty();
                $.getJSON(`?handler=Department&departmentId=${departmentId}`, (data) => {
                    $.each(data, function (i, item) {
                        $("#SelectedMentors").append(`<option value="${item.value}">${item.text}</option>`);
                    });
                });
            });
        });
        $(function () {
            $("#Employee_ProjectId").on("change", function () {
                var projectId = $(this).val();
                $("#SelectedMentors").empty();
                $.getJSON(`?handler=Project&projectId=${projectId}`, (data) => {
                    $.each(data, function (i, item) {
                        $("#SelectedMentors").append(`<option value="${item.value}">${item.text}</option>`);
                    });
                });
            });
        });
        $(function () {
            $("#Employee_BranchId").on("change", function () {
                var branchId = $(this).val();
                $("#SelectedMentors").empty();
                $.getJSON(`?handler=Branch&branchId=${branchId}`, (data) => {
                    $.each(data, function (i, item) {
                        $("#SelectedMentors").append(`<option value="${item.value}">${item.text}</option>`);
                    });
                });
            });
        });

        @* Display the filename of the selected photo *@
        $(".custom-file-input").on("change", function () {
            var fileName = $(this).val().split("\\").pop();
            $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
        });
        @* Display image of the selected photo *@
        $("#customFile").change(function (e) {

            for (var i = 0; i < e.originalEvent.srcElement.files.length; i++) {

                var file = e.originalEvent.srcElement.files[i];

                var img = document.createElement("img");
                img.setAttribute("id", "upload");
                img.setAttribute("class", "img-responsive");
                var reader = new FileReader();
                reader.onloadend = function () {
                    img.src = reader.result;
                }
                reader.readAsDataURL(file);
                $('#upload').remove();
                $("#photo").after(img);
            }
        });
    </script>
}
